/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// State of the VNX volume. Only volumes that are in the Ready or Default state can be imported. If a volume is in any other state, the underlying cause of the state must be corrected with the VNX management software, and the VNX volume details must be refreshed using the refresh action to import the volume. Values are: * Invalid - The volume is in an invalid state. * Initializing - The volume is initializing. * Ready - The volume is ready. This is the healthy state of a storage pool based volume. * Faulted - The volume is faulted. * Offline - The volume is offline. * Destroying - The volume is being destroyed. * Default - The volume is ready. This is the healthy state of a RAID group based volume. 
        /// </summary>
        /// <value>State of the VNX volume. Only volumes that are in the Ready or Default state can be imported. If a volume is in any other state, the underlying cause of the state must be corrected with the VNX management software, and the VNX volume details must be refreshed using the refresh action to import the volume. Values are: * Invalid - The volume is in an invalid state. * Initializing - The volume is initializing. * Ready - The volume is ready. This is the healthy state of a storage pool based volume. * Faulted - The volume is faulted. * Offline - The volume is offline. * Destroying - The volume is being destroyed. * Default - The volume is ready. This is the healthy state of a RAID group based volume. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum VnxVolumeStateEnum
        {
            
            /// <summary>
            /// Enum InvalidEnum for Invalid
            /// </summary>
            [EnumMember(Value = "Invalid")]
            InvalidEnum = 1,
            
            /// <summary>
            /// Enum InitializingEnum for Initializing
            /// </summary>
            [EnumMember(Value = "Initializing")]
            InitializingEnum = 2,
            
            /// <summary>
            /// Enum ReadyEnum for Ready
            /// </summary>
            [EnumMember(Value = "Ready")]
            ReadyEnum = 3,
            
            /// <summary>
            /// Enum FaultedEnum for Faulted
            /// </summary>
            [EnumMember(Value = "Faulted")]
            FaultedEnum = 4,
            
            /// <summary>
            /// Enum OfflineEnum for Offline
            /// </summary>
            [EnumMember(Value = "Offline")]
            OfflineEnum = 5,
            
            /// <summary>
            /// Enum DestroyingEnum for Destroying
            /// </summary>
            [EnumMember(Value = "Destroying")]
            DestroyingEnum = 6,
            
            /// <summary>
            /// Enum DefaultEnum for Default
            /// </summary>
            [EnumMember(Value = "Default")]
            DefaultEnum = 7
        }
}
