/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// Response will be just an array of one of the child of this definition
    /// </summary>
    [DataContract]
    public partial class MetricsGenerateResponse : IEquatable<MetricsGenerateResponse>
    { 
        /// <summary>
        /// Localized message string corresponding to entity.
        /// </summary>
        /// <value>Localized message string corresponding to entity.</value>
        [Required]
        
        [DataMember(Name="entity")]
        public MetricsEntityEnum? Entity { get; set; }

        /// <summary>
        /// Response definition for the entity.
        /// </summary>
        /// <value>Response definition for the entity.</value>
        [Required]
        
        [DataMember(Name="response_definition")]
        public string ResponseDefinition { get; set; }

        /// <summary>
        /// Localized message string corresponding to entity
        /// </summary>
        /// <value>Localized message string corresponding to entity</value>

        [DataMember(Name="entity_l10n")]
        public string EntityL10n { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MetricsGenerateResponse {\n");
            sb.Append("  Entity: ").Append(Entity).Append("\n");
            sb.Append("  ResponseDefinition: ").Append(ResponseDefinition).Append("\n");
            sb.Append("  EntityL10n: ").Append(EntityL10n).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((MetricsGenerateResponse)obj);
        }

        /// <summary>
        /// Returns true if MetricsGenerateResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of MetricsGenerateResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MetricsGenerateResponse other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Entity == other.Entity ||
                    Entity != null &&
                    Entity.Equals(other.Entity)
                ) && 
                (
                    ResponseDefinition == other.ResponseDefinition ||
                    ResponseDefinition != null &&
                    ResponseDefinition.Equals(other.ResponseDefinition)
                ) && 
                (
                    EntityL10n == other.EntityL10n ||
                    EntityL10n != null &&
                    EntityL10n.Equals(other.EntityL10n)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Entity != null)
                    hashCode = hashCode * 59 + Entity.GetHashCode();
                    if (ResponseDefinition != null)
                    hashCode = hashCode * 59 + ResponseDefinition.GetHashCode();
                    if (EntityL10n != null)
                    hashCode = hashCode * 59 + EntityL10n.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(MetricsGenerateResponse left, MetricsGenerateResponse right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(MetricsGenerateResponse left, MetricsGenerateResponse right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
