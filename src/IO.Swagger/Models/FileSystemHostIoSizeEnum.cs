/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Typical size of writes from the server or other computer using the VMware file system to the storage system. This setting is used to match the storage block size to the I/O of the primary application using the storage, which can optimize performance. By default Host IO size will be 8K size for VMware filesystem. This attribute only applies to VMware config type filesystems. * VMware_8K - Host I/O size is 8K for vmware datastore purpose. * VMware_16K - Host I/O size is 16K for vmware datastore purpose. * VMware_32K - Host I/O size is 32K for vmware datastore purpose. * VMware_64K - Host I/O size is 64K for vmware datastore purpose.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>Typical size of writes from the server or other computer using the VMware file system to the storage system. This setting is used to match the storage block size to the I/O of the primary application using the storage, which can optimize performance. By default Host IO size will be 8K size for VMware filesystem. This attribute only applies to VMware config type filesystems. * VMware_8K - Host I/O size is 8K for vmware datastore purpose. * VMware_16K - Host I/O size is 16K for vmware datastore purpose. * VMware_32K - Host I/O size is 32K for vmware datastore purpose. * VMware_64K - Host I/O size is 64K for vmware datastore purpose.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum FileSystemHostIoSizeEnum
        {
            
            /// <summary>
            /// Enum _8KEnum for VMware_8K
            /// </summary>
            [EnumMember(Value = "VMware_8K")]
            _8KEnum = 1,
            
            /// <summary>
            /// Enum _16KEnum for VMware_16K
            /// </summary>
            [EnumMember(Value = "VMware_16K")]
            _16KEnum = 2,
            
            /// <summary>
            /// Enum _32KEnum for VMware_32K
            /// </summary>
            [EnumMember(Value = "VMware_32K")]
            _32KEnum = 3,
            
            /// <summary>
            /// Enum _64KEnum for VMware_64K
            /// </summary>
            [EnumMember(Value = "VMware_64K")]
            _64KEnum = 4
        }
}
