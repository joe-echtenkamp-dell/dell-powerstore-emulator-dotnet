/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Possible remote protection capabilities: * Asynchronous_Block_Replication  - Capable of asynchronous block replication. * Synchronous_Block_Replication   - Capable of synchronous block replication. * Asynchronous_File_Replication   - Capable of asynchronous file replication. * Asynchronous_Vvol_Replication   - Capable of asynchronous vVol replication. * Block_Nondisruptive_Import      - Capable of block import without any IO disruption which is seamless import. Remote system need to upgrade/support seamless import in order to support this capability. * Block_Agentless_Import          - Capable of block import with minimal IO disruption and downtime. No upgrade of remote system or host agent  need to be installed to support this capability. * File_Import                     - Capable of file import. * Block_Metro_Active_Active       - Capable of block metro active active replication. * Remote_Backup                   - Capable of backing up snapshots to PowerProtect DD.   * Synchronous_File_Replication - Capable of synchronous file replication.   Was added in version 3.0.0.0.
        /// </summary>
        /// <value>Possible remote protection capabilities: * Asynchronous_Block_Replication  - Capable of asynchronous block replication. * Synchronous_Block_Replication   - Capable of synchronous block replication. * Asynchronous_File_Replication   - Capable of asynchronous file replication. * Asynchronous_Vvol_Replication   - Capable of asynchronous vVol replication. * Block_Nondisruptive_Import      - Capable of block import without any IO disruption which is seamless import. Remote system need to upgrade/support seamless import in order to support this capability. * Block_Agentless_Import          - Capable of block import with minimal IO disruption and downtime. No upgrade of remote system or host agent  need to be installed to support this capability. * File_Import                     - Capable of file import. * Block_Metro_Active_Active       - Capable of block metro active active replication. * Remote_Backup                   - Capable of backing up snapshots to PowerProtect DD.   * Synchronous_File_Replication - Capable of synchronous file replication.   Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteProtectionCapabilityEnum
        {
            
            /// <summary>
            /// Enum AsynchronousBlockReplicationEnum for Asynchronous_Block_Replication
            /// </summary>
            [EnumMember(Value = "Asynchronous_Block_Replication")]
            AsynchronousBlockReplicationEnum = 1,
            
            /// <summary>
            /// Enum AsynchronousFileReplicationEnum for Asynchronous_File_Replication
            /// </summary>
            [EnumMember(Value = "Asynchronous_File_Replication")]
            AsynchronousFileReplicationEnum = 2,
            
            /// <summary>
            /// Enum AsynchronousVvolReplicationEnum for Asynchronous_Vvol_Replication
            /// </summary>
            [EnumMember(Value = "Asynchronous_Vvol_Replication")]
            AsynchronousVvolReplicationEnum = 3,
            
            /// <summary>
            /// Enum BlockAgentlessImportEnum for Block_Agentless_Import
            /// </summary>
            [EnumMember(Value = "Block_Agentless_Import")]
            BlockAgentlessImportEnum = 4,
            
            /// <summary>
            /// Enum BlockMetroActiveActiveEnum for Block_Metro_Active_Active
            /// </summary>
            [EnumMember(Value = "Block_Metro_Active_Active")]
            BlockMetroActiveActiveEnum = 5,
            
            /// <summary>
            /// Enum BlockNondisruptiveImportEnum for Block_Nondisruptive_Import
            /// </summary>
            [EnumMember(Value = "Block_Nondisruptive_Import")]
            BlockNondisruptiveImportEnum = 6,
            
            /// <summary>
            /// Enum FileImportEnum for File_Import
            /// </summary>
            [EnumMember(Value = "File_Import")]
            FileImportEnum = 7,
            
            /// <summary>
            /// Enum RemoteBackupEnum for Remote_Backup
            /// </summary>
            [EnumMember(Value = "Remote_Backup")]
            RemoteBackupEnum = 8,
            
            /// <summary>
            /// Enum SynchronousBlockReplicationEnum for Synchronous_Block_Replication
            /// </summary>
            [EnumMember(Value = "Synchronous_Block_Replication")]
            SynchronousBlockReplicationEnum = 9,
            
            /// <summary>
            /// Enum SynchronousFileReplicationEnum for Synchronous_File_Replication
            /// </summary>
            [EnumMember(Value = "Synchronous_File_Replication")]
            SynchronousFileReplicationEnum = 10
        }
}
