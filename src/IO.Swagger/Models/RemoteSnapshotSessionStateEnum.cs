/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// State of the remote snapshot session:  * Initializing - The session is being created. The status changes to Idle after the session is created.  * Idle - No other operation. The session is operating normally.  * Prepare - Indicates that the session is preparing for the data copy.  * In_Progress - Indicates that the data copy between the source and remote system has started.  * IO_Forwarding - Indicates that the session is forwarding the host IO's. Only applies to instant_access type sessions.  * Completed - Indicates that all operations completed successfully. Only applies to retrieve type sessions.  * Failed - Indicates that there was an error during the session operation.  * Cancelling - Session is being cancelled.  * Cancelled - Indicates that a user forcefully cancelled the session. Sessions which are in Prepare, In_progress & Paused state can be cancelled.  * Deleting - Session is being deleted.  * System_Paused -  A non-disruptive upgrade or Migration paused the session.  * Paused - Indicates that the session cannot be used for further backups. Sessions which are in Idle, Prepare, In_progress and Failed state can be paused.  * Rollback_In_Progress- Indicates that there was an error during the session operation and changes are getting reverted.  * Failed_Cleanup_Required- Indicates that there was an error during the session operation and while reverting the changes there is another failure. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to failed state once cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cancel_Cleanup_Required- Indicates that there was an error during the session cancel operation. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to cancelled state once cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cleanup_Required- Indicates that operation has completely successfully but while cleaning the resources locally there was an error. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to idle/completed state once the cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cleanup_In_Progress- Indicates that a cleanup is in progress.  Was added in version 3.5.0.0.
        /// </summary>
        /// <value>State of the remote snapshot session:  * Initializing - The session is being created. The status changes to Idle after the session is created.  * Idle - No other operation. The session is operating normally.  * Prepare - Indicates that the session is preparing for the data copy.  * In_Progress - Indicates that the data copy between the source and remote system has started.  * IO_Forwarding - Indicates that the session is forwarding the host IO's. Only applies to instant_access type sessions.  * Completed - Indicates that all operations completed successfully. Only applies to retrieve type sessions.  * Failed - Indicates that there was an error during the session operation.  * Cancelling - Session is being cancelled.  * Cancelled - Indicates that a user forcefully cancelled the session. Sessions which are in Prepare, In_progress & Paused state can be cancelled.  * Deleting - Session is being deleted.  * System_Paused -  A non-disruptive upgrade or Migration paused the session.  * Paused - Indicates that the session cannot be used for further backups. Sessions which are in Idle, Prepare, In_progress and Failed state can be paused.  * Rollback_In_Progress- Indicates that there was an error during the session operation and changes are getting reverted.  * Failed_Cleanup_Required- Indicates that there was an error during the session operation and while reverting the changes there is another failure. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to failed state once cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cancel_Cleanup_Required- Indicates that there was an error during the session cancel operation. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to cancelled state once cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cleanup_Required- Indicates that operation has completely successfully but while cleaning the resources locally there was an error. This state will be cleaned up automatically by the cleanup service that runs periodically. Session will be moved to idle/completed state once the cleanup is successful. In case of a backup session, no further backup is allowed while the session is in this state.  * Cleanup_In_Progress- Indicates that a cleanup is in progress.  Was added in version 3.5.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteSnapshotSessionStateEnum
        {
            
            /// <summary>
            /// Enum InitializingEnum for Initializing
            /// </summary>
            [EnumMember(Value = "Initializing")]
            InitializingEnum = 1,
            
            /// <summary>
            /// Enum IdleEnum for Idle
            /// </summary>
            [EnumMember(Value = "Idle")]
            IdleEnum = 2,
            
            /// <summary>
            /// Enum PrepareEnum for Prepare
            /// </summary>
            [EnumMember(Value = "Prepare")]
            PrepareEnum = 3,
            
            /// <summary>
            /// Enum InProgressEnum for In_Progress
            /// </summary>
            [EnumMember(Value = "In_Progress")]
            InProgressEnum = 4,
            
            /// <summary>
            /// Enum IOForwardingEnum for IO_Forwarding
            /// </summary>
            [EnumMember(Value = "IO_Forwarding")]
            IOForwardingEnum = 5,
            
            /// <summary>
            /// Enum CompletedEnum for Completed
            /// </summary>
            [EnumMember(Value = "Completed")]
            CompletedEnum = 6,
            
            /// <summary>
            /// Enum FailedEnum for Failed
            /// </summary>
            [EnumMember(Value = "Failed")]
            FailedEnum = 7,
            
            /// <summary>
            /// Enum CancellingEnum for Cancelling
            /// </summary>
            [EnumMember(Value = "Cancelling")]
            CancellingEnum = 8,
            
            /// <summary>
            /// Enum CancelledEnum for Cancelled
            /// </summary>
            [EnumMember(Value = "Cancelled")]
            CancelledEnum = 9,
            
            /// <summary>
            /// Enum DeletingEnum for Deleting
            /// </summary>
            [EnumMember(Value = "Deleting")]
            DeletingEnum = 10,
            
            /// <summary>
            /// Enum SystemPausedEnum for System_Paused
            /// </summary>
            [EnumMember(Value = "System_Paused")]
            SystemPausedEnum = 11,
            
            /// <summary>
            /// Enum PausedEnum for Paused
            /// </summary>
            [EnumMember(Value = "Paused")]
            PausedEnum = 12,
            
            /// <summary>
            /// Enum RollbackInProgressEnum for Rollback_In_Progress
            /// </summary>
            [EnumMember(Value = "Rollback_In_Progress")]
            RollbackInProgressEnum = 13,
            
            /// <summary>
            /// Enum FailedCleanupRequiredEnum for Failed_Cleanup_Required
            /// </summary>
            [EnumMember(Value = "Failed_Cleanup_Required")]
            FailedCleanupRequiredEnum = 14,
            
            /// <summary>
            /// Enum CancelCleanupRequiredEnum for Cancel_Cleanup_Required
            /// </summary>
            [EnumMember(Value = "Cancel_Cleanup_Required")]
            CancelCleanupRequiredEnum = 15,
            
            /// <summary>
            /// Enum CleanupRequiredEnum for Cleanup_Required
            /// </summary>
            [EnumMember(Value = "Cleanup_Required")]
            CleanupRequiredEnum = 16,
            
            /// <summary>
            /// Enum CleanupInProgressEnum for Cleanup_In_Progress
            /// </summary>
            [EnumMember(Value = "Cleanup_In_Progress")]
            CleanupInProgressEnum = 17
        }
}
