/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Type of the replication session: * Asynchronous               - Data is copied asynchronously to the destination resource. * Metro_Active_Active        - Data is copied synchronously in both directions. Both local and remote resource are available for production IO. * Synchronous       - Data is copied synchronously to destination resource.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>Type of the replication session: * Asynchronous               - Data is copied asynchronously to the destination resource. * Metro_Active_Active        - Data is copied synchronously in both directions. Both local and remote resource are available for production IO. * Synchronous       - Data is copied synchronously to destination resource.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ReplicationSessionTypeEnum
        {
            
            /// <summary>
            /// Enum AsynchronousEnum for Asynchronous
            /// </summary>
            [EnumMember(Value = "Asynchronous")]
            AsynchronousEnum = 1,
            
            /// <summary>
            /// Enum MetroActiveActiveEnum for Metro_Active_Active
            /// </summary>
            [EnumMember(Value = "Metro_Active_Active")]
            MetroActiveActiveEnum = 2,
            
            /// <summary>
            /// Enum SynchronousEnum for Synchronous
            /// </summary>
            [EnumMember(Value = "Synchronous")]
            SynchronousEnum = 3
        }
}
