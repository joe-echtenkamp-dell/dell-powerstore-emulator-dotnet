/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Migration state of the import host volume. Valid values are:  * Import_Completed - Import operation was successful.  * Cancel_Completed - Cancel operation was successful.  * Import_Aborted - Aborted the ongoing import.  * Cancel_Aborted - Aborted the ongoing cancel operation.  * Cancel_Forced -  Aborted the ongoing cancel operation.  * None - Migration state is not known to PowerStore. 
        /// </summary>
        /// <value>Migration state of the import host volume. Valid values are:  * Import_Completed - Import operation was successful.  * Cancel_Completed - Cancel operation was successful.  * Import_Aborted - Aborted the ongoing import.  * Cancel_Aborted - Aborted the ongoing cancel operation.  * Cancel_Forced -  Aborted the ongoing cancel operation.  * None - Migration state is not known to PowerStore. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ImportOperationStatusEnum
        {
            
            /// <summary>
            /// Enum ImportCompletedEnum for Import_Completed
            /// </summary>
            [EnumMember(Value = "Import_Completed")]
            ImportCompletedEnum = 1,
            
            /// <summary>
            /// Enum CancelCompletedEnum for Cancel_Completed
            /// </summary>
            [EnumMember(Value = "Cancel_Completed")]
            CancelCompletedEnum = 2,
            
            /// <summary>
            /// Enum ImportAbortedEnum for Import_Aborted
            /// </summary>
            [EnumMember(Value = "Import_Aborted")]
            ImportAbortedEnum = 3,
            
            /// <summary>
            /// Enum CancelAbortedEnum for Cancel_Aborted
            /// </summary>
            [EnumMember(Value = "Cancel_Aborted")]
            CancelAbortedEnum = 4,
            
            /// <summary>
            /// Enum CancelForcedEnum for Cancel_Forced
            /// </summary>
            [EnumMember(Value = "Cancel_Forced")]
            CancelForcedEnum = 5,
            
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 6
        }
}
