/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// State of the user quota or tree quota record period. * Ok - No quota limits are exceeded. * Soft_Exceeded - Soft limit is exceeded, and grace period is not expired. * Soft_Exceeded_And_Expired - Soft limit is exceeded, and grace period is expired. * Hard_Reached - Hard limit is reached. 
        /// </summary>
        /// <value>State of the user quota or tree quota record period. * Ok - No quota limits are exceeded. * Soft_Exceeded - Soft limit is exceeded, and grace period is not expired. * Soft_Exceeded_And_Expired - Soft limit is exceeded, and grace period is expired. * Hard_Reached - Hard limit is reached. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum FileQuotaStateEnum
        {
            
            /// <summary>
            /// Enum OkEnum for Ok
            /// </summary>
            [EnumMember(Value = "Ok")]
            OkEnum = 1,
            
            /// <summary>
            /// Enum SoftExceededEnum for Soft_Exceeded
            /// </summary>
            [EnumMember(Value = "Soft_Exceeded")]
            SoftExceededEnum = 2,
            
            /// <summary>
            /// Enum SoftExceededAndExpiredEnum for Soft_Exceeded_And_Expired
            /// </summary>
            [EnumMember(Value = "Soft_Exceeded_And_Expired")]
            SoftExceededAndExpiredEnum = 3,
            
            /// <summary>
            /// Enum HardReachedEnum for Hard_Reached
            /// </summary>
            [EnumMember(Value = "Hard_Reached")]
            HardReachedEnum = 4
        }
}
