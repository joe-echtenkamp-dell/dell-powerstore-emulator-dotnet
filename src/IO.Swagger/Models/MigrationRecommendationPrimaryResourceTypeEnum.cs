/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Specifies grouping mechanism for migration actions in a recommendation that identifies logically related migration actions. If a volume/virtual volume is attached to a host/virtual machine and the system selects all volumes/virtual volumes attached to the same host/virtual machine for migration, the type is set to host/virtual_machine. If a volume/virtual volume is unattached or the system couldn't consider logical grouping, the group type is set to volume or virtual volume. For volume group objects, the scope of migration is always volumes_group regardless of host attachment. The order of selection for primary resource types is: Resources without host/virtual_machine connectivity. Resources with host/virtual_machine connectivity. Resources in each of the above category are further ordered by decreasing cost of migration.  Valid scopes for migrations are: * volume - Standalone attached/unattached volume family. * virtual_volume - Standalone attached/unattached virtual volume family. * host - Logical group of all volume families attached to a host. * virtual_machine - Logical group of all virtual volume families attached to a virtual machine. * replication_group - Logical group of all virtual volume families and virtual machines attached to a replication group * volume_group - Volume group family with or without host attachment.  Values was added in 3.0.0.0: replication_group.
        /// </summary>
        /// <value>Specifies grouping mechanism for migration actions in a recommendation that identifies logically related migration actions. If a volume/virtual volume is attached to a host/virtual machine and the system selects all volumes/virtual volumes attached to the same host/virtual machine for migration, the type is set to host/virtual_machine. If a volume/virtual volume is unattached or the system couldn't consider logical grouping, the group type is set to volume or virtual volume. For volume group objects, the scope of migration is always volumes_group regardless of host attachment. The order of selection for primary resource types is: Resources without host/virtual_machine connectivity. Resources with host/virtual_machine connectivity. Resources in each of the above category are further ordered by decreasing cost of migration.  Valid scopes for migrations are: * volume - Standalone attached/unattached volume family. * virtual_volume - Standalone attached/unattached virtual volume family. * host - Logical group of all volume families attached to a host. * virtual_machine - Logical group of all virtual volume families attached to a virtual machine. * replication_group - Logical group of all virtual volume families and virtual machines attached to a replication group * volume_group - Volume group family with or without host attachment.  Values was added in 3.0.0.0: replication_group.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum MigrationRecommendationPrimaryResourceTypeEnum
        {
            
            /// <summary>
            /// Enum VolumeEnum for volume
            /// </summary>
            [EnumMember(Value = "volume")]
            VolumeEnum = 1,
            
            /// <summary>
            /// Enum VirtualVolumeEnum for virtual_volume
            /// </summary>
            [EnumMember(Value = "virtual_volume")]
            VirtualVolumeEnum = 2,
            
            /// <summary>
            /// Enum HostEnum for host
            /// </summary>
            [EnumMember(Value = "host")]
            HostEnum = 3,
            
            /// <summary>
            /// Enum VirtualMachineEnum for virtual_machine
            /// </summary>
            [EnumMember(Value = "virtual_machine")]
            VirtualMachineEnum = 4,
            
            /// <summary>
            /// Enum ReplicationGroupEnum for replication_group
            /// </summary>
            [EnumMember(Value = "replication_group")]
            ReplicationGroupEnum = 5,
            
            /// <summary>
            /// Enum VolumeGroupEnum for volume_group
            /// </summary>
            [EnumMember(Value = "volume_group")]
            VolumeGroupEnum = 6
        }
}
