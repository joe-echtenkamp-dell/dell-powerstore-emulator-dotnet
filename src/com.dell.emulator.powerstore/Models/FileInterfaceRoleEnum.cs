/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// Values are: * Production - This type of network interface is used for all file protocols and services of a NAS server. This type of interface is inactive while a NAS server is in destination mode. * Backup - This type of network interface is used only for NDMP/NFS backup or disaster recovery testing. This type of interface is always active in all NAS server modes. * System - This type of interface are reserved for system traffic such as for NAS server migration, they can't be used for the production traffic. System type is not supported during create interface.  Values was added in 3.0.0.0: System.
        /// </summary>
        /// <value>Values are: * Production - This type of network interface is used for all file protocols and services of a NAS server. This type of interface is inactive while a NAS server is in destination mode. * Backup - This type of network interface is used only for NDMP/NFS backup or disaster recovery testing. This type of interface is always active in all NAS server modes. * System - This type of interface are reserved for system traffic such as for NAS server migration, they can't be used for the production traffic. System type is not supported during create interface.  Values was added in 3.0.0.0: System.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum FileInterfaceRoleEnum
        {
            
            /// <summary>
            /// Enum ProductionEnum for Production
            /// </summary>
            [EnumMember(Value = "Production")]
            ProductionEnum = 1,
            
            /// <summary>
            /// Enum BackupEnum for Backup
            /// </summary>
            [EnumMember(Value = "Backup")]
            BackupEnum = 2,
            
            /// <summary>
            /// Enum SystemEnum for System
            /// </summary>
            [EnumMember(Value = "System")]
            SystemEnum = 3
        }
}
