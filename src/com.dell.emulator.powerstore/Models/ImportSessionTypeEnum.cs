/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// The type of the import session.  Values are: * Non_Disruptive - This type of import session requires an Import Host Agent to be running on any host accessing the import source resources. There is no host application downtime. * Agentless - This type of import session does not require an Import Host Agent to be running on any host accessing the source resources of import. Host application downtime is required to reconfigure the host application to use the destination resource before starting the data copy operation.  Was added in version 1.0.2.
        /// </summary>
        /// <value>The type of the import session.  Values are: * Non_Disruptive - This type of import session requires an Import Host Agent to be running on any host accessing the import source resources. There is no host application downtime. * Agentless - This type of import session does not require an Import Host Agent to be running on any host accessing the source resources of import. Host application downtime is required to reconfigure the host application to use the destination resource before starting the data copy operation.  Was added in version 1.0.2.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ImportSessionTypeEnum
        {
            
            /// <summary>
            /// Enum NonDisruptiveEnum for Non_Disruptive
            /// </summary>
            [EnumMember(Value = "Non_Disruptive")]
            NonDisruptiveEnum = 1,
            
            /// <summary>
            /// Enum AgentlessEnum for Agentless
            /// </summary>
            [EnumMember(Value = "Agentless")]
            AgentlessEnum = 2
        }
}
