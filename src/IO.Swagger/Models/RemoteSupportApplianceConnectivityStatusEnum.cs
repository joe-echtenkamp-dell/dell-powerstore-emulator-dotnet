/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// The remote support connectivity status for this appliance.   * Unavailable - Unable to determine status at this time   * Not_Connected - Connectivity has been lost   * Reconnecting - Connectivity is being reestablished   * Evaluating - Connectivity has been established, evaluating connection status   * Disabled - Remote Support is disabled   * Good - Connectivity status is good   * Fair - Connectivity status is fair   * Poor - Connectivity status is poor. Communication may be delayed.  Was added in version 2.0.0.0.
        /// </summary>
        /// <value>The remote support connectivity status for this appliance.   * Unavailable - Unable to determine status at this time   * Not_Connected - Connectivity has been lost   * Reconnecting - Connectivity is being reestablished   * Evaluating - Connectivity has been established, evaluating connection status   * Disabled - Remote Support is disabled   * Good - Connectivity status is good   * Fair - Connectivity status is fair   * Poor - Connectivity status is poor. Communication may be delayed.  Was added in version 2.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteSupportApplianceConnectivityStatusEnum
        {
            
            /// <summary>
            /// Enum UnavailableEnum for Unavailable
            /// </summary>
            [EnumMember(Value = "Unavailable")]
            UnavailableEnum = 1,
            
            /// <summary>
            /// Enum NotConnectedEnum for Not_Connected
            /// </summary>
            [EnumMember(Value = "Not_Connected")]
            NotConnectedEnum = 2,
            
            /// <summary>
            /// Enum ReconnectingEnum for Reconnecting
            /// </summary>
            [EnumMember(Value = "Reconnecting")]
            ReconnectingEnum = 3,
            
            /// <summary>
            /// Enum EvaluatingEnum for Evaluating
            /// </summary>
            [EnumMember(Value = "Evaluating")]
            EvaluatingEnum = 4,
            
            /// <summary>
            /// Enum DisabledEnum for Disabled
            /// </summary>
            [EnumMember(Value = "Disabled")]
            DisabledEnum = 5,
            
            /// <summary>
            /// Enum GoodEnum for Good
            /// </summary>
            [EnumMember(Value = "Good")]
            GoodEnum = 6,
            
            /// <summary>
            /// Enum FairEnum for Fair
            /// </summary>
            [EnumMember(Value = "Fair")]
            FairEnum = 7,
            
            /// <summary>
            /// Enum PoorEnum for Poor
            /// </summary>
            [EnumMember(Value = "Poor")]
            PoorEnum = 8
        }
}
