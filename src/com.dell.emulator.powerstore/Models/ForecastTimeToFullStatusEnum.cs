/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// Type of alert indicated for object based on projected time to full.  * OK - Time to full value is greater than 28 days. No alert indicated.  * Minor - Time to full value is less than or equal to 28 days but greater than 14 days. Minor alert indicated.  * Major - Time to full value is less than or equal to 14 days. Major alert indicated.  * None - There is insufficient forecast data to project time to full to at least 28 days. No alert indicated, but available data cannot guarantee `OK` status. 
        /// </summary>
        /// <value>Type of alert indicated for object based on projected time to full.  * OK - Time to full value is greater than 28 days. No alert indicated.  * Minor - Time to full value is less than or equal to 28 days but greater than 14 days. Minor alert indicated.  * Major - Time to full value is less than or equal to 14 days. Major alert indicated.  * None - There is insufficient forecast data to project time to full to at least 28 days. No alert indicated, but available data cannot guarantee `OK` status. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ForecastTimeToFullStatusEnum
        {
            
            /// <summary>
            /// Enum OKEnum for OK
            /// </summary>
            [EnumMember(Value = "OK")]
            OKEnum = 1,
            
            /// <summary>
            /// Enum MinorEnum for Minor
            /// </summary>
            [EnumMember(Value = "Minor")]
            MinorEnum = 2,
            
            /// <summary>
            /// Enum MajorEnum for Major
            /// </summary>
            [EnumMember(Value = "Major")]
            MajorEnum = 3,
            
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 4
        }
}
