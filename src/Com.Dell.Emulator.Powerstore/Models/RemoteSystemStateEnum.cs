/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// Possible remote system states:  * OK                             - Normal conditions.  * Update_Needed                  - Verify and update needed to handle network configuration changes on the systems.  * Management_Connection_Lost     - Management connection to the remote peer is lost.  * Partial_Delete                 - Remote System is partially deleted. Either the data connections from the PowerStore to remote system is not destroyed completely or the file capability of remote system has been deleted but the block deletion has failed.  Values was added in 3.0.0.0: Partial_Delete.
        /// </summary>
        /// <value>Possible remote system states:  * OK                             - Normal conditions.  * Update_Needed                  - Verify and update needed to handle network configuration changes on the systems.  * Management_Connection_Lost     - Management connection to the remote peer is lost.  * Partial_Delete                 - Remote System is partially deleted. Either the data connections from the PowerStore to remote system is not destroyed completely or the file capability of remote system has been deleted but the block deletion has failed.  Values was added in 3.0.0.0: Partial_Delete.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteSystemStateEnum
        {
            
            /// <summary>
            /// Enum OKEnum for OK
            /// </summary>
            [EnumMember(Value = "OK")]
            OKEnum = 1,
            
            /// <summary>
            /// Enum UpdateNeededEnum for Update_Needed
            /// </summary>
            [EnumMember(Value = "Update_Needed")]
            UpdateNeededEnum = 2,
            
            /// <summary>
            /// Enum ManagementConnectionLostEnum for Management_Connection_Lost
            /// </summary>
            [EnumMember(Value = "Management_Connection_Lost")]
            ManagementConnectionLostEnum = 3,
            
            /// <summary>
            /// Enum PartialDeleteEnum for Partial_Delete
            /// </summary>
            [EnumMember(Value = "Partial_Delete")]
            PartialDeleteEnum = 4
        }
}
