/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// Parameters for the file NDMP create operation.
    /// </summary>
    [DataContract]
    public partial class FileNdmpCreate : IEquatable<FileNdmpCreate>
    { 
        /// <summary>
        /// Unique identifier of the NAS server to be configured with these NDMP settings. name:{name} can be used instead of {id}. For example: &#39;nas_server_id&#39;:&#39;name:nas_server_name&#39;
        /// </summary>
        /// <value>Unique identifier of the NAS server to be configured with these NDMP settings. name:{name} can be used instead of {id}. For example: &#39;nas_server_id&#39;:&#39;name:nas_server_name&#39;</value>
        [Required]
        
        [DataMember(Name="nas_server_id")]
        public string NasServerId { get; set; }

        /// <summary>
        /// User name for accessing the NDMP service.
        /// </summary>
        /// <value>User name for accessing the NDMP service.</value>
        [Required]
        
        [StringLength(64, MinimumLength=1)]
        [DataMember(Name="user_name")]
        public string UserName { get; set; }

        /// <summary>
        /// Password for the NDMP service user.
        /// </summary>
        /// <value>Password for the NDMP service user.</value>
        [Required]
        
        [StringLength(15, MinimumLength=1)]
        [DataMember(Name="password")]
        public string Password { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileNdmpCreate {\n");
            sb.Append("  NasServerId: ").Append(NasServerId).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((FileNdmpCreate)obj);
        }

        /// <summary>
        /// Returns true if FileNdmpCreate instances are equal
        /// </summary>
        /// <param name="other">Instance of FileNdmpCreate to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileNdmpCreate other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    NasServerId == other.NasServerId ||
                    NasServerId != null &&
                    NasServerId.Equals(other.NasServerId)
                ) && 
                (
                    UserName == other.UserName ||
                    UserName != null &&
                    UserName.Equals(other.UserName)
                ) && 
                (
                    Password == other.Password ||
                    Password != null &&
                    Password.Equals(other.Password)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (NasServerId != null)
                    hashCode = hashCode * 59 + NasServerId.GetHashCode();
                    if (UserName != null)
                    hashCode = hashCode * 59 + UserName.GetHashCode();
                    if (Password != null)
                    hashCode = hashCode * 59 + Password.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(FileNdmpCreate left, FileNdmpCreate right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(FileNdmpCreate left, FileNdmpCreate right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
