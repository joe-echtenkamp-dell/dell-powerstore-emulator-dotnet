/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// Appliance configuration setting during cluster creation. Was added in version 2.0.0.0.
    /// </summary>
    [DataContract]
    public partial class ClusterCreateAppliances : IEquatable<ClusterCreateAppliances>
    { 
        /// <summary>
        /// The link local address is a dynamically set local IPv4 address. It is unique to this appliance and is set by Zeroconf. Use the PowerStore Discovery Tool to get the link local addresses of available PowerStore appliances on the local subnet. 
        /// </summary>
        /// <value>The link local address is a dynamically set local IPv4 address. It is unique to this appliance and is set by Zeroconf. Use the PowerStore Discovery Tool to get the link local addresses of available PowerStore appliances on the local subnet. </value>
        [Required]
        
        [DataMember(Name="link_local_address")]
        public string LinkLocalAddress { get; set; }

        /// <summary>
        /// The name of the new appliance. By default, the name is \&quot;[cluster name]-appliance-[index number]\&quot;. The maximum size is 64 characters. 
        /// </summary>
        /// <value>The name of the new appliance. By default, the name is \&quot;[cluster name]-appliance-[index number]\&quot;. The maximum size is 64 characters. </value>

        [StringLength(64, MinimumLength=1)]
        [DataMember(Name="name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets DriveFailureToleranceLevel
        /// </summary>

        [DataMember(Name="drive_failure_tolerance_level")]
        public DriveFailureToleranceLevelEnum? DriveFailureToleranceLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClusterCreateAppliances {\n");
            sb.Append("  LinkLocalAddress: ").Append(LinkLocalAddress).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  DriveFailureToleranceLevel: ").Append(DriveFailureToleranceLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ClusterCreateAppliances)obj);
        }

        /// <summary>
        /// Returns true if ClusterCreateAppliances instances are equal
        /// </summary>
        /// <param name="other">Instance of ClusterCreateAppliances to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClusterCreateAppliances other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    LinkLocalAddress == other.LinkLocalAddress ||
                    LinkLocalAddress != null &&
                    LinkLocalAddress.Equals(other.LinkLocalAddress)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    DriveFailureToleranceLevel == other.DriveFailureToleranceLevel ||
                    DriveFailureToleranceLevel != null &&
                    DriveFailureToleranceLevel.Equals(other.DriveFailureToleranceLevel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (LinkLocalAddress != null)
                    hashCode = hashCode * 59 + LinkLocalAddress.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (DriveFailureToleranceLevel != null)
                    hashCode = hashCode * 59 + DriveFailureToleranceLevel.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ClusterCreateAppliances left, ClusterCreateAppliances right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ClusterCreateAppliances left, ClusterCreateAppliances right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
