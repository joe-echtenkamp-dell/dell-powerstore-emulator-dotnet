/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Migration state of the VNX volume. Values are: * None - The volume is not migrated. * Prepared - The volume is ready for migration. * Disabled_For_IO - Host I/O is disabled on the volume. * In_Progress - Volume migration is in progress. * Completed - The volume is migrated. * Aborted - Volume migration is cancelled. * Not_Applicable - Volume migration state is not applicable if the system only supports agentless import. * Unknown - The volume migration state cannot be determined. 
        /// </summary>
        /// <value>Migration state of the VNX volume. Values are: * None - The volume is not migrated. * Prepared - The volume is ready for migration. * Disabled_For_IO - Host I/O is disabled on the volume. * In_Progress - Volume migration is in progress. * Completed - The volume is migrated. * Aborted - Volume migration is cancelled. * Not_Applicable - Volume migration state is not applicable if the system only supports agentless import. * Unknown - The volume migration state cannot be determined. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum VnxVolumeMigrationStateEnum
        {
            
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 1,
            
            /// <summary>
            /// Enum PreparedEnum for Prepared
            /// </summary>
            [EnumMember(Value = "Prepared")]
            PreparedEnum = 2,
            
            /// <summary>
            /// Enum DisabledForIOEnum for Disabled_For_IO
            /// </summary>
            [EnumMember(Value = "Disabled_For_IO")]
            DisabledForIOEnum = 3,
            
            /// <summary>
            /// Enum InProgressEnum for In_Progress
            /// </summary>
            [EnumMember(Value = "In_Progress")]
            InProgressEnum = 4,
            
            /// <summary>
            /// Enum CompletedEnum for Completed
            /// </summary>
            [EnumMember(Value = "Completed")]
            CompletedEnum = 5,
            
            /// <summary>
            /// Enum AbortedEnum for Aborted
            /// </summary>
            [EnumMember(Value = "Aborted")]
            AbortedEnum = 6,
            
            /// <summary>
            /// Enum NotApplicableEnum for Not_Applicable
            /// </summary>
            [EnumMember(Value = "Not_Applicable")]
            NotApplicableEnum = 7,
            
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 8
        }
}
