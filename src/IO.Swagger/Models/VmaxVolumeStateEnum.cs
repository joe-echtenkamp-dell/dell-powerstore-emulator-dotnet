/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// The state of the volume. Normal states for a volume is Ready. Other states indicate errors. Values are:  * Ready- This means volume is ready for import.  * Not_Ready- This means volume is not ready and cannot be imported.  * Write_Disabled- This means volume is write disable and cannot be imported.  * Mixed- This means volume state is mixed and cannot be imported.  * Not_Applicable- This means volume state not applicable and cannot be imported.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>The state of the volume. Normal states for a volume is Ready. Other states indicate errors. Values are:  * Ready- This means volume is ready for import.  * Not_Ready- This means volume is not ready and cannot be imported.  * Write_Disabled- This means volume is write disable and cannot be imported.  * Mixed- This means volume state is mixed and cannot be imported.  * Not_Applicable- This means volume state not applicable and cannot be imported.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum VmaxVolumeStateEnum
        {
            
            /// <summary>
            /// Enum ReadyEnum for Ready
            /// </summary>
            [EnumMember(Value = "Ready")]
            ReadyEnum = 1,
            
            /// <summary>
            /// Enum NotReadyEnum for Not_Ready
            /// </summary>
            [EnumMember(Value = "Not_Ready")]
            NotReadyEnum = 2,
            
            /// <summary>
            /// Enum WriteDisabledEnum for Write_Disabled
            /// </summary>
            [EnumMember(Value = "Write_Disabled")]
            WriteDisabledEnum = 3,
            
            /// <summary>
            /// Enum MixedEnum for Mixed
            /// </summary>
            [EnumMember(Value = "Mixed")]
            MixedEnum = 4,
            
            /// <summary>
            /// Enum NotApplicableEnum for Not_Applicable
            /// </summary>
            [EnumMember(Value = "Not_Applicable")]
            NotApplicableEnum = 5
        }
}
