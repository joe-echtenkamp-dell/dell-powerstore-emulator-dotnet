/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// State of the event notification services for all file systems of the NAS server. * None - File event notifications are disabled for this file system. * SMB_Only - SMB notifications are enabled for this file system. * NFS_Only - NFS notifications are enabled for this file system. * All - SMB and NFS notifications are enabled for this file system.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>State of the event notification services for all file systems of the NAS server. * None - File event notifications are disabled for this file system. * SMB_Only - SMB notifications are enabled for this file system. * NFS_Only - NFS notifications are enabled for this file system. * All - SMB and NFS notifications are enabled for this file system.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum FileEventsPublishingModeEnum
        {
            
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 1,
            
            /// <summary>
            /// Enum SMBOnlyEnum for SMB_Only
            /// </summary>
            [EnumMember(Value = "SMB_Only")]
            SMBOnlyEnum = 2,
            
            /// <summary>
            /// Enum NFSOnlyEnum for NFS_Only
            /// </summary>
            [EnumMember(Value = "NFS_Only")]
            NFSOnlyEnum = 3,
            
            /// <summary>
            /// Enum AllEnum for All
            /// </summary>
            [EnumMember(Value = "All")]
            AllEnum = 4
        }
}
