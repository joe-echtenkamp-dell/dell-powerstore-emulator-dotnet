/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Remote system connection type between the local system and the following remote systems: * PowerStore               - PowerStore system * Unity                    - Unity import system * VNX                      - VNX import system * PS_Equallogic            - PS EqualLogic import system * Storage_Center           - Storage Center import system * XtremIO                  - XtremIO import system * NetApp                   - NetApp import system * PowerMax_VMAX            - PowerMax or VMAX import system * PowerProtect_DD          - PowerProtect DD * Universal                - Universal 
        /// </summary>
        /// <value>Remote system connection type between the local system and the following remote systems: * PowerStore               - PowerStore system * Unity                    - Unity import system * VNX                      - VNX import system * PS_Equallogic            - PS EqualLogic import system * Storage_Center           - Storage Center import system * XtremIO                  - XtremIO import system * NetApp                   - NetApp import system * PowerMax_VMAX            - PowerMax or VMAX import system * PowerProtect_DD          - PowerProtect DD * Universal                - Universal </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteSystemTypeEnum
        {
            
            /// <summary>
            /// Enum PowerStoreEnum for PowerStore
            /// </summary>
            [EnumMember(Value = "PowerStore")]
            PowerStoreEnum = 1,
            
            /// <summary>
            /// Enum UnityEnum for Unity
            /// </summary>
            [EnumMember(Value = "Unity")]
            UnityEnum = 2,
            
            /// <summary>
            /// Enum VNXEnum for VNX
            /// </summary>
            [EnumMember(Value = "VNX")]
            VNXEnum = 3,
            
            /// <summary>
            /// Enum PSEquallogicEnum for PS_Equallogic
            /// </summary>
            [EnumMember(Value = "PS_Equallogic")]
            PSEquallogicEnum = 4,
            
            /// <summary>
            /// Enum StorageCenterEnum for Storage_Center
            /// </summary>
            [EnumMember(Value = "Storage_Center")]
            StorageCenterEnum = 5,
            
            /// <summary>
            /// Enum XtremIOEnum for XtremIO
            /// </summary>
            [EnumMember(Value = "XtremIO")]
            XtremIOEnum = 6,
            
            /// <summary>
            /// Enum NetAppEnum for NetApp
            /// </summary>
            [EnumMember(Value = "NetApp")]
            NetAppEnum = 7,
            
            /// <summary>
            /// Enum PowerProtectDDEnum for PowerProtect_DD
            /// </summary>
            [EnumMember(Value = "PowerProtect_DD")]
            PowerProtectDDEnum = 8,
            
            /// <summary>
            /// Enum PowerMaxVMAXEnum for PowerMax_VMAX
            /// </summary>
            [EnumMember(Value = "PowerMax_VMAX")]
            PowerMaxVMAXEnum = 9,
            
            /// <summary>
            /// Enum UniversalEnum for Universal
            /// </summary>
            [EnumMember(Value = "Universal")]
            UniversalEnum = 10
        }
}
