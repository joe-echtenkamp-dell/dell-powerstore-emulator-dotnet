/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
    /// <summary>
    /// Duration information for each stage. Was added in version 3.0.0.0.
    /// </summary>
    [DataContract]
    public partial class FileImportSessionReportCurrentOpeartionDuration : IEquatable<FileImportSessionReportCurrentOpeartionDuration>
    { 
        /// <summary>
        /// Total duration of the stage in seconds Was added in version 3.2.0.0. Was deprecated in version 3.5.0.0.
        /// </summary>
        /// <value>Total duration of the stage in seconds Was added in version 3.2.0.0. Was deprecated in version 3.5.0.0.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="total_Duration")]
        public int? TotalDurationDeprecated { get; set; }

        /// <summary>
        /// Total duration of the stage in seconds
        /// </summary>
        /// <value>Total duration of the stage in seconds</value>

        [Range(0, 2147483647)]
        [DataMember(Name="total_duration")]
        public int? TotalDuration { get; set; }

        /// <summary>
        /// Duration of Initial Provisioning stage in seconds.
        /// </summary>
        /// <value>Duration of Initial Provisioning stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="initial_provisioning_duration")]
        public int? InitialProvisioningDuration { get; set; }

        /// <summary>
        /// Duration of Initial Copy stage in seconds.
        /// </summary>
        /// <value>Duration of Initial Copy stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="initial_copy_duration")]
        public int? InitialCopyDuration { get; set; }

        /// <summary>
        /// Duration of Importing Config stage in seconds. Was added in version 3.2.0.0. Was deprecated in version 3.5.0.0.
        /// </summary>
        /// <value>Duration of Importing Config stage in seconds. Was added in version 3.2.0.0. Was deprecated in version 3.5.0.0.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="importing_configDuration")]
        public int? ImportingConfigDurationDeprecated  { get; set; }

        /// <summary>
        /// Duration of Importing Config stage in seconds.
        /// </summary>
        /// <value>Duration of Importing Config stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="importing_config_duration")]
        public int? ImportingConfigDuration { get; set; }

        /// <summary>
        /// Duration of Cutting Over stage in seconds.
        /// </summary>
        /// <value>Duration of Cutting Over stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="cutting_over_duration")]
        public int? CuttingOverDuration { get; set; }

        /// <summary>
        /// Duration of Incremental Copy stage in seconds.
        /// </summary>
        /// <value>Duration of Incremental Copy stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="incremental_copy_duration")]
        public int? IncrementalCopyDuration { get; set; }

        /// <summary>
        /// Duration of Committing stage in seconds.
        /// </summary>
        /// <value>Duration of Committing stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="committing_duration")]
        public int? CommittingDuration { get; set; }

        /// <summary>
        /// Duration of Cancelling stage in seconds.
        /// </summary>
        /// <value>Duration of Cancelling stage in seconds.</value>

        [Range(0, 2147483647)]
        [DataMember(Name="cancelling_duration")]
        public int? CancellingDuration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileImportSessionReportCurrentOpeartionDuration {\n");
            sb.Append("  TotalDurationDeprecated: ").Append(TotalDurationDeprecated).Append("\n");
            sb.Append("  TotalDuration: ").Append(TotalDuration).Append("\n");
            sb.Append("  InitialProvisioningDuration: ").Append(InitialProvisioningDuration).Append("\n");
            sb.Append("  InitialCopyDuration: ").Append(InitialCopyDuration).Append("\n");
            sb.Append("  ImportingConfigDurationDeprecated: ").Append(ImportingConfigDurationDeprecated).Append("\n");
            sb.Append("  ImportingConfigDuration: ").Append(ImportingConfigDuration).Append("\n");
            sb.Append("  CuttingOverDuration: ").Append(CuttingOverDuration).Append("\n");
            sb.Append("  IncrementalCopyDuration: ").Append(IncrementalCopyDuration).Append("\n");
            sb.Append("  CommittingDuration: ").Append(CommittingDuration).Append("\n");
            sb.Append("  CancellingDuration: ").Append(CancellingDuration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((FileImportSessionReportCurrentOpeartionDuration)obj);
        }

        /// <summary>
        /// Returns true if FileImportSessionReportCurrentOpeartionDuration instances are equal
        /// </summary>
        /// <param name="other">Instance of FileImportSessionReportCurrentOpeartionDuration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileImportSessionReportCurrentOpeartionDuration other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    TotalDuration == other.TotalDuration ||
                    TotalDuration != null &&
                    TotalDuration.Equals(other.TotalDuration)
                ) && 
                (
                    TotalDurationDeprecated  == other.TotalDurationDeprecated  ||
                    TotalDurationDeprecated  != null &&
                    TotalDurationDeprecated .Equals(other.TotalDurationDeprecated )
                ) && 
                (
                    InitialProvisioningDuration == other.InitialProvisioningDuration ||
                    InitialProvisioningDuration != null &&
                    InitialProvisioningDuration.Equals(other.InitialProvisioningDuration)
                ) && 
                (
                    InitialCopyDuration == other.InitialCopyDuration ||
                    InitialCopyDuration != null &&
                    InitialCopyDuration.Equals(other.InitialCopyDuration)
                ) && 
                (
                    ImportingConfigDurationDeprecated  == other.ImportingConfigDurationDeprecated  ||
                    ImportingConfigDurationDeprecated  != null &&
                    ImportingConfigDurationDeprecated .Equals(other.ImportingConfigDurationDeprecated )
                ) && 
                (
                    ImportingConfigDuration == other.ImportingConfigDuration ||
                    ImportingConfigDuration != null &&
                    ImportingConfigDuration.Equals(other.ImportingConfigDuration)
                ) && 
                (
                    CuttingOverDuration == other.CuttingOverDuration ||
                    CuttingOverDuration != null &&
                    CuttingOverDuration.Equals(other.CuttingOverDuration)
                ) && 
                (
                    IncrementalCopyDuration == other.IncrementalCopyDuration ||
                    IncrementalCopyDuration != null &&
                    IncrementalCopyDuration.Equals(other.IncrementalCopyDuration)
                ) && 
                (
                    CommittingDuration == other.CommittingDuration ||
                    CommittingDuration != null &&
                    CommittingDuration.Equals(other.CommittingDuration)
                ) && 
                (
                    CancellingDuration == other.CancellingDuration ||
                    CancellingDuration != null &&
                    CancellingDuration.Equals(other.CancellingDuration)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (TotalDurationDeprecated  != null)
                    hashCode = hashCode * 59 + TotalDurationDeprecated .GetHashCode();
                    if (TotalDuration != null)
                    hashCode = hashCode * 59 + TotalDuration.GetHashCode();
                    if (InitialProvisioningDuration != null)
                    hashCode = hashCode * 59 + InitialProvisioningDuration.GetHashCode();
                    if (InitialCopyDuration != null)
                    hashCode = hashCode * 59 + InitialCopyDuration.GetHashCode();
                    if (ImportingConfigDuration != null)
                    hashCode = hashCode * 59 + ImportingConfigDuration.GetHashCode();
                    if (ImportingConfigDuration != null)
                    hashCode = hashCode * 59 + ImportingConfigDuration.GetHashCode();
                    if (CuttingOverDuration != null)
                    hashCode = hashCode * 59 + CuttingOverDuration.GetHashCode();
                    if (IncrementalCopyDuration != null)
                    hashCode = hashCode * 59 + IncrementalCopyDuration.GetHashCode();
                    if (CommittingDuration != null)
                    hashCode = hashCode * 59 + CommittingDuration.GetHashCode();
                    if (CancellingDuration != null)
                    hashCode = hashCode * 59 + CancellingDuration.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(FileImportSessionReportCurrentOpeartionDuration left, FileImportSessionReportCurrentOpeartionDuration right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(FileImportSessionReportCurrentOpeartionDuration left, FileImportSessionReportCurrentOpeartionDuration right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
