/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// NAS filesystem snapshot access method. Applies only to file system type snapshots taken locally (no remote_system_id set). The setting is ignored for volume, virtual_volume, and volume_group snapshots. The possible values are: * Snapshot - Creates read-only auto mounted snapshots accessible from the hidden .snapshot subdirectory of the production file system. * Protocol - Creates read-only snapshots which can be mounted and accessed at a later time via NFS Export or SMB share.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>NAS filesystem snapshot access method. Applies only to file system type snapshots taken locally (no remote_system_id set). The setting is ignored for volume, virtual_volume, and volume_group snapshots. The possible values are: * Snapshot - Creates read-only auto mounted snapshots accessible from the hidden .snapshot subdirectory of the production file system. * Protocol - Creates read-only snapshots which can be mounted and accessed at a later time via NFS Export or SMB share.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NASAccessTypeEnum
        {
            
            /// <summary>
            /// Enum SnapshotEnum for Snapshot
            /// </summary>
            [EnumMember(Value = "Snapshot")]
            SnapshotEnum = 1,
            
            /// <summary>
            /// Enum ProtocolEnum for Protocol
            /// </summary>
            [EnumMember(Value = "Protocol")]
            ProtocolEnum = 2
        }
}
