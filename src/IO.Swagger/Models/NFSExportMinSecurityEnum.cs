/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// NFS enforced security type for users accessing an NFS Export. * Sys - Allow the user to authenticate with any NFS security types: UNIX, Kerberos, Kerberos with integrity, or Kerberos with encryption. * Kerberos - Allow only Kerberos security for user authentication. * Kerberos_With_Integrity- Allow only Kerberos with integrity and Kerberos with encryption security for user authentication. * Kerberos_With_Encryption- Allow only Kerberos with encryption security for user authentication. 
        /// </summary>
        /// <value>NFS enforced security type for users accessing an NFS Export. * Sys - Allow the user to authenticate with any NFS security types: UNIX, Kerberos, Kerberos with integrity, or Kerberos with encryption. * Kerberos - Allow only Kerberos security for user authentication. * Kerberos_With_Integrity- Allow only Kerberos with integrity and Kerberos with encryption security for user authentication. * Kerberos_With_Encryption- Allow only Kerberos with encryption security for user authentication. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NFSExportMinSecurityEnum
        {
            
            /// <summary>
            /// Enum SysEnum for Sys
            /// </summary>
            [EnumMember(Value = "Sys")]
            SysEnum = 1,
            
            /// <summary>
            /// Enum KerberosEnum for Kerberos
            /// </summary>
            [EnumMember(Value = "Kerberos")]
            KerberosEnum = 2,
            
            /// <summary>
            /// Enum KerberosWithIntegrityEnum for Kerberos_With_Integrity
            /// </summary>
            [EnumMember(Value = "Kerberos_With_Integrity")]
            KerberosWithIntegrityEnum = 3,
            
            /// <summary>
            /// Enum KerberosWithEncryptionEnum for Kerberos_With_Encryption
            /// </summary>
            [EnumMember(Value = "Kerberos_With_Encryption")]
            KerberosWithEncryptionEnum = 4
        }
}
