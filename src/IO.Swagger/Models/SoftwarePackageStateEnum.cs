/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// Software package state. Valid values are: * Available - The package is ready to be downloaded. * Downloaded - The package is downloaded and ready to install. * Installing - The package is being installed. * Installed - The package has been successfully installed. * Install_Failed - Installing the package failed. * Download_Failed - Downloading the package failed. * Download_Canceled - Downloading the package was canceled. * Downloading - The package is being downloaded.  Values was added in 4.0.0.0: Download_Canceled, Downloading.
        /// </summary>
        /// <value>Software package state. Valid values are: * Available - The package is ready to be downloaded. * Downloaded - The package is downloaded and ready to install. * Installing - The package is being installed. * Installed - The package has been successfully installed. * Install_Failed - Installing the package failed. * Download_Failed - Downloading the package failed. * Download_Canceled - Downloading the package was canceled. * Downloading - The package is being downloaded.  Values was added in 4.0.0.0: Download_Canceled, Downloading.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum SoftwarePackageStateEnum
        {
            
            /// <summary>
            /// Enum AvailableEnum for Available
            /// </summary>
            [EnumMember(Value = "Available")]
            AvailableEnum = 1,
            
            /// <summary>
            /// Enum DownloadedEnum for Downloaded
            /// </summary>
            [EnumMember(Value = "Downloaded")]
            DownloadedEnum = 2,
            
            /// <summary>
            /// Enum InstallingEnum for Installing
            /// </summary>
            [EnumMember(Value = "Installing")]
            InstallingEnum = 3,
            
            /// <summary>
            /// Enum InstalledEnum for Installed
            /// </summary>
            [EnumMember(Value = "Installed")]
            InstalledEnum = 4,
            
            /// <summary>
            /// Enum InstallFailedEnum for Install_Failed
            /// </summary>
            [EnumMember(Value = "Install_Failed")]
            InstallFailedEnum = 5,
            
            /// <summary>
            /// Enum DownloadFailedEnum for Download_Failed
            /// </summary>
            [EnumMember(Value = "Download_Failed")]
            DownloadFailedEnum = 6,
            
            /// <summary>
            /// Enum DownloadCanceledEnum for Download_Canceled
            /// </summary>
            [EnumMember(Value = "Download_Canceled")]
            DownloadCanceledEnum = 7,
            
            /// <summary>
            /// Enum DownloadingEnum for Downloading
            /// </summary>
            [EnumMember(Value = "Downloading")]
            DownloadingEnum = 8
        }
}
