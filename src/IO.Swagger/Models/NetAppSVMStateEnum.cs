/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// State of NetApp storage SVM. * Starting - NetApp SVM is in starting state. * Running - NetApp SVM is in running state. * Stopping - NetApp SVM is in stopping state. * Stopped - NetApp SVM is in stopped state. * Deleting - NetApp SVM is in deleting state.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>State of NetApp storage SVM. * Starting - NetApp SVM is in starting state. * Running - NetApp SVM is in running state. * Stopping - NetApp SVM is in stopping state. * Stopped - NetApp SVM is in stopped state. * Deleting - NetApp SVM is in deleting state.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NetAppSVMStateEnum
        {
            
            /// <summary>
            /// Enum StartingEnum for Starting
            /// </summary>
            [EnumMember(Value = "Starting")]
            StartingEnum = 1,
            
            /// <summary>
            /// Enum RunningEnum for Running
            /// </summary>
            [EnumMember(Value = "Running")]
            RunningEnum = 2,
            
            /// <summary>
            /// Enum StoppingEnum for Stopping
            /// </summary>
            [EnumMember(Value = "Stopping")]
            StoppingEnum = 3,
            
            /// <summary>
            /// Enum StoppedEnum for Stopped
            /// </summary>
            [EnumMember(Value = "Stopped")]
            StoppedEnum = 4,
            
            /// <summary>
            /// Enum DeletingEnum for Deleting
            /// </summary>
            [EnumMember(Value = "Deleting")]
            DeletingEnum = 5
        }
}
