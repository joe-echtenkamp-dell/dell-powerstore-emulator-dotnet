/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Com.Dell.Emulator.Powerstore.Attributes;

using Microsoft.AspNetCore.Authorization;
using Com.Dell.Emulator.Powerstore.Models;

namespace Com.Dell.Emulator.Powerstore.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class KmipConfigApiController : ControllerBase
    { 
        /// <summary>
        /// Collection Query
        /// </summary>
        /// <remarks>Get the KMIP configuration for the cluster. Was added in version 3.0.0.0.  This resource type collection query does not support filtering, sorting or pagination.</remarks>
        /// <response code="200">Success Was added in version 3.0.0.0.</response>
        /// <response code="206">Partial content of kmip config instance objects</response>
        [HttpGet]
        [Route("/api/rest/kmip_config")]
        [ValidateModelState]
        [SwaggerOperation("KmipConfigGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<KmipConfigInstance>), description: "Success Was added in version 3.0.0.0.")]
        [SwaggerResponse(statusCode: 206, type: typeof(List<KmipConfigInstance>), description: "Partial content of kmip config instance objects")]
        public virtual IActionResult KmipConfigGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<KmipConfigInstance>));

            //TODO: Uncomment the next line to return response 206 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(206, default(List<KmipConfigInstance>));

            string exampleJson = null;
            exampleJson = "[ {\n  \"id\" : \"1\",\n  \"is_enabled\" : true,\n  \"port\" : 5696,\n  \"server_timeout\" : 5,\n  \"username\" : \"admin\",\n  \"servers\" : [ {\n    \"address\" : \"10.205.67.90\",\n    \"status\" : \"Down\"\n  }, {\n    \"address\" : \"ExampleDomainName.com\",\n    \"status\" : \"Up\"\n  }, {\n    \"address\" : \"10.205.67.105\"\n  } ]\n} ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<KmipConfigInstance>>(exampleJson)
            : default(List<KmipConfigInstance>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Instance Query
        /// </summary>
        /// <remarks>Get a specific KMIP server configuration. Was added in version 3.0.0.0.</remarks>
        /// <param name="id"> Was added in version 3.0.0.0.</param>
        /// <response code="200">Success Was added in version 3.0.0.0.</response>
        /// <response code="404">Not Found Was added in version 3.0.0.0.</response>
        [HttpGet]
        [Route("/api/rest/kmip_config/{id}")]
        [ValidateModelState]
        [SwaggerOperation("KmipConfigIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(KmipConfigInstance), description: "Success Was added in version 3.0.0.0.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found Was added in version 3.0.0.0.")]
        public virtual IActionResult KmipConfigIdGet([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(KmipConfigInstance));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));

            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"1\",\n  \"is_enabled\" : true,\n  \"port\" : 5696,\n  \"server_timeout\" : 5,\n  \"username\" : \"admin\",\n  \"servers\" : [ {\n    \"address\" : \"10.205.67.90\",\n    \"status\" : \"Down\"\n  }, {\n    \"address\" : \"ExampleDomainName.com\",\n    \"status\" : \"Up\"\n  }, {\n    \"address\" : \"10.205.67.105\"\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<KmipConfigInstance>(exampleJson)
            : default(KmipConfigInstance);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Modify
        /// </summary>
        /// <remarks>Modify the KMIP server configuration for the cluster. Was added in version 3.0.0.0.</remarks>
        /// <param name="id"> Was added in version 3.0.0.0.</param>
        /// <param name="body"> Was added in version 3.0.0.0.</param>
        /// <response code="204">Success Was added in version 3.0.0.0.</response>
        /// <response code="400">Invalid Request Was added in version 3.0.0.0.</response>
        /// <response code="404">Not Found Was added in version 3.0.0.0.</response>
        /// <response code="422">Operation Failed</response>
        [HttpPatch]
        [Route("/api/rest/kmip_config/{id}")]
        [ValidateModelState]
        [SwaggerOperation("KmipConfigIdPatch")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Invalid Request Was added in version 3.0.0.0.")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found Was added in version 3.0.0.0.")]
        [SwaggerResponse(statusCode: 422, type: typeof(ErrorResponse), description: "Operation Failed")]
        public virtual IActionResult KmipConfigIdPatch([FromRoute][Required]string id, [FromBody]KmipConfigModify body)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ErrorResponse));


            throw new NotImplementedException();
        }

        /// <summary>
        /// Verify
        /// </summary>
        /// <remarks>Verify the connection to the KMIP server and update the status of individual servers. This operation simply updates the status property of each member KMIP server and returns success or failure based on the status.  Was added in version 3.0.0.0.</remarks>
        /// <param name="id"> Was added in version 3.0.0.0.</param>
        /// <response code="204">Success Was added in version 3.0.0.0.</response>
        /// <response code="400">Invalid request</response>
        /// <response code="404">Not Found Was added in version 3.0.0.0.</response>
        /// <response code="422">Operation Failed Was added in version 3.0.0.0.</response>
        [HttpPost]
        [Route("/api/rest/kmip_config/{id}/verify")]
        [ValidateModelState]
        [SwaggerOperation("KmipConfigIdVerifyPost")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Invalid request")]
        [SwaggerResponse(statusCode: 404, type: typeof(ErrorResponse), description: "Not Found Was added in version 3.0.0.0.")]
        [SwaggerResponse(statusCode: 422, type: typeof(ErrorResponse), description: "Operation Failed Was added in version 3.0.0.0.")]
        public virtual IActionResult KmipConfigIdVerifyPost([FromRoute][Required]string id)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ErrorResponse));


            throw new NotImplementedException();
        }
    }
}
