/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// Connectivity type for hosts and host groups. If any of the metro connectivity settings are specified, a metro host or host group must exist in both clusters and provide connectivity to a metro volume from both clusters. Failing to configure hosts or host groups properly could result in data unavailable conditions in failover scenarios or poor I/O performance. * Local_Only - Local connectivity to this array. This is the default setting for all hosts and host groups. * Metro_Optimize_Both - Metro connectivity configuration for specifying optimized status for both this cluster and the remote cluster. This option should be selected if the host or host group has equivalent latency and performance for paths to both the local and remote metro clusters. The host or host group will use their own multi-path configuration to determine the best path for I/O. * Metro_Optimize_Local - Metro connectivity configuration for specifying optimized status for this cluster, and non-optimized status for the remote cluster. This option should be selected if the host or host group has a low latency connection to this cluster and a higher latency connections to the remote cluster. The host or host group will always send I/O to this cluster except in failure situations. * Metro_Optimize_Remote - Metro Connectivity configuration for specifying non-optimized status for this cluster, and optimized status for the remote cluster. This option should be selected if the host or host group has a high latency connection to this cluster and a low latency connection to the remote cluster. The host or host group will always send I/O to the remote cluster except in failure situations.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>Connectivity type for hosts and host groups. If any of the metro connectivity settings are specified, a metro host or host group must exist in both clusters and provide connectivity to a metro volume from both clusters. Failing to configure hosts or host groups properly could result in data unavailable conditions in failover scenarios or poor I/O performance. * Local_Only - Local connectivity to this array. This is the default setting for all hosts and host groups. * Metro_Optimize_Both - Metro connectivity configuration for specifying optimized status for both this cluster and the remote cluster. This option should be selected if the host or host group has equivalent latency and performance for paths to both the local and remote metro clusters. The host or host group will use their own multi-path configuration to determine the best path for I/O. * Metro_Optimize_Local - Metro connectivity configuration for specifying optimized status for this cluster, and non-optimized status for the remote cluster. This option should be selected if the host or host group has a low latency connection to this cluster and a higher latency connections to the remote cluster. The host or host group will always send I/O to this cluster except in failure situations. * Metro_Optimize_Remote - Metro Connectivity configuration for specifying non-optimized status for this cluster, and optimized status for the remote cluster. This option should be selected if the host or host group has a high latency connection to this cluster and a low latency connection to the remote cluster. The host or host group will always send I/O to the remote cluster except in failure situations.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum HostConnectivityEnum
        {
            
            /// <summary>
            /// Enum LocalOnlyEnum for Local_Only
            /// </summary>
            [EnumMember(Value = "Local_Only")]
            LocalOnlyEnum = 1,
            
            /// <summary>
            /// Enum MetroOptimizeBothEnum for Metro_Optimize_Both
            /// </summary>
            [EnumMember(Value = "Metro_Optimize_Both")]
            MetroOptimizeBothEnum = 2,
            
            /// <summary>
            /// Enum MetroOptimizeLocalEnum for Metro_Optimize_Local
            /// </summary>
            [EnumMember(Value = "Metro_Optimize_Local")]
            MetroOptimizeLocalEnum = 3,
            
            /// <summary>
            /// Enum MetroOptimizeRemoteEnum for Metro_Optimize_Remote
            /// </summary>
            [EnumMember(Value = "Metro_Optimize_Remote")]
            MetroOptimizeRemoteEnum = 4
        }
}
