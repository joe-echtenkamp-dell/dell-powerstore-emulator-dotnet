/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// NAS server operational status: * Stopped - NAS server is stopped. * Starting - NAS server is starting. * Started - NAS server is started. * Stopping - NAS server is stopping. * Failover - NAS server has failed over. * Degraded - NAS server is degraded (running without backup). * Unknown - NAS server state is unknown. 
        /// </summary>
        /// <value>NAS server operational status: * Stopped - NAS server is stopped. * Starting - NAS server is starting. * Started - NAS server is started. * Stopping - NAS server is stopping. * Failover - NAS server has failed over. * Degraded - NAS server is degraded (running without backup). * Unknown - NAS server state is unknown. </value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NASServerOperationalStatusEnum
        {
            
            /// <summary>
            /// Enum StoppedEnum for Stopped
            /// </summary>
            [EnumMember(Value = "Stopped")]
            StoppedEnum = 1,
            
            /// <summary>
            /// Enum StartingEnum for Starting
            /// </summary>
            [EnumMember(Value = "Starting")]
            StartingEnum = 2,
            
            /// <summary>
            /// Enum StartedEnum for Started
            /// </summary>
            [EnumMember(Value = "Started")]
            StartedEnum = 3,
            
            /// <summary>
            /// Enum StoppingEnum for Stopping
            /// </summary>
            [EnumMember(Value = "Stopping")]
            StoppingEnum = 4,
            
            /// <summary>
            /// Enum FailoverEnum for Failover
            /// </summary>
            [EnumMember(Value = "Failover")]
            FailoverEnum = 5,
            
            /// <summary>
            /// Enum DegradedEnum for Degraded
            /// </summary>
            [EnumMember(Value = "Degraded")]
            DegradedEnum = 6,
            
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 7
        }
}
