/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
        /// <summary>
        /// Possible witness states:  * OK - Normal conditions. All nodes on all appliances can communicate with the witness.  * Partially_Connected - Some nodes on some appliances can communicate with the witness.  * Disconnected - All nodes on all appliances cannot communicate with the witness.  * Deleting - The witness is currently being unregistered and deleted from the cluster.  * Initializing - All nodes on all appliances are initializing their connection to the witness.  Was added in version 3.6.0.0.
        /// </summary>
        /// <value>Possible witness states:  * OK - Normal conditions. All nodes on all appliances can communicate with the witness.  * Partially_Connected - Some nodes on some appliances can communicate with the witness.  * Disconnected - All nodes on all appliances cannot communicate with the witness.  * Deleting - The witness is currently being unregistered and deleted from the cluster.  * Initializing - All nodes on all appliances are initializing their connection to the witness.  Was added in version 3.6.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum WitnessStateEnum
        {
            
            /// <summary>
            /// Enum OKEnum for OK
            /// </summary>
            [EnumMember(Value = "OK")]
            OKEnum = 1,
            
            /// <summary>
            /// Enum PartiallyConnectedEnum for Partially_Connected
            /// </summary>
            [EnumMember(Value = "Partially_Connected")]
            PartiallyConnectedEnum = 2,
            
            /// <summary>
            /// Enum DisconnectedEnum for Disconnected
            /// </summary>
            [EnumMember(Value = "Disconnected")]
            DisconnectedEnum = 3,
            
            /// <summary>
            /// Enum DeletingEnum for Deleting
            /// </summary>
            [EnumMember(Value = "Deleting")]
            DeletingEnum = 4,
            
            /// <summary>
            /// Enum InitializingEnum for Initializing
            /// </summary>
            [EnumMember(Value = "Initializing")]
            InitializingEnum = 5
        }
}
