// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using com.dell.emulator.powerstore.Models.DataContext;

#nullable disable

namespace com.dell.emulator.powerstore.Migrations
{
    [DbContext(typeof(PowerstoreEmulatorDBContext))]
    partial class PowerstoreEmulatorDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Com.Dell.Emulator.Powerstore.Models.AlertInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AcknowledgedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CalledHomeTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ClearedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionL10n")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmailSentTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GeneratedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsAcknowledged")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RaisedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResourceType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceTypeL10n")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeverityL10n")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SnmpSentTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StateL10n")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alerts");

                    b.HasData(
                        new
                        {
                            Id = "001",
                            DescriptionL10n = "Alert01",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1042),
                            Severity = 1
                        },
                        new
                        {
                            Id = "002",
                            DescriptionL10n = "Alert02",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1145),
                            Severity = 2
                        },
                        new
                        {
                            Id = "003",
                            DescriptionL10n = "Alert03",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1160),
                            Severity = 3
                        },
                        new
                        {
                            Id = "004",
                            DescriptionL10n = "Alert04",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1171),
                            Severity = 4
                        },
                        new
                        {
                            Id = "005",
                            DescriptionL10n = "Alert05",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1183),
                            Severity = 5
                        },
                        new
                        {
                            Id = "006",
                            DescriptionL10n = "Alert06",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1197),
                            Severity = 2
                        },
                        new
                        {
                            Id = "007",
                            DescriptionL10n = "Alert07",
                            GeneratedTimestamp = new DateTime(2024, 8, 6, 11, 36, 48, 919, DateTimeKind.Local).AddTicks(1209),
                            Severity = 2
                        });
                });

            modelBuilder.Entity("Com.Dell.Emulator.Powerstore.Models.EventInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlertInstanceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionL10n")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GeneratedTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepairFlowL10n")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResourceType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceTypeL10n")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeverityL10n")
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemImpactL10n")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlertInstanceId");

                    b.ToTable("EventInstance");
                });

            modelBuilder.Entity("Com.Dell.Emulator.Powerstore.Models.EventInstance", b =>
                {
                    b.HasOne("Com.Dell.Emulator.Powerstore.Models.AlertInstance", null)
                        .WithMany("Events")
                        .HasForeignKey("AlertInstanceId");
                });

            modelBuilder.Entity("Com.Dell.Emulator.Powerstore.Models.AlertInstance", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
