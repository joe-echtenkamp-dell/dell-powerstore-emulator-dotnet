/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
    /// <summary>
    /// A subset of data collection profiles. Was added in version 3.0.0.0.
    /// </summary>
    [DataContract]
    public partial class DatacollectionProfileInstance : IEquatable<DatacollectionProfileInstance>
    { 
        /// <summary>
        /// Unique Data Collection Profile Identifier.
        /// </summary>
        /// <value>Unique Data Collection Profile Identifier.</value>

        [DataMember(Name="id")]
        public string Id { get; set; }

        /// <summary>
        /// Name of the Data Collection Profile.  This property supports case-insensitive filtering.
        /// </summary>
        /// <value>Name of the Data Collection Profile.  This property supports case-insensitive filtering.</value>

        [DataMember(Name="name")]
        public string Name { get; set; }

        /// <summary>
        /// A description of the contents of the Data Collection Profile.
        /// </summary>
        /// <value>A description of the contents of the Data Collection Profile.</value>

        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// The prompt that will be displayed to the user for this profile.
        /// </summary>
        /// <value>The prompt that will be displayed to the user for this profile.</value>

        [DataMember(Name="prompt")]
        public string Prompt { get; set; }

        /// <summary>
        /// Indicates that this is the default profile. Only one profile can be set as the default.
        /// </summary>
        /// <value>Indicates that this is the default profile. Only one profile can be set as the default.</value>

        [DataMember(Name="is_default")]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DatacollectionProfileInstance {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Prompt: ").Append(Prompt).Append("\n");
            sb.Append("  IsDefault: ").Append(IsDefault).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((DatacollectionProfileInstance)obj);
        }

        /// <summary>
        /// Returns true if DatacollectionProfileInstance instances are equal
        /// </summary>
        /// <param name="other">Instance of DatacollectionProfileInstance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DatacollectionProfileInstance other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    Description == other.Description ||
                    Description != null &&
                    Description.Equals(other.Description)
                ) && 
                (
                    Prompt == other.Prompt ||
                    Prompt != null &&
                    Prompt.Equals(other.Prompt)
                ) && 
                (
                    IsDefault == other.IsDefault ||
                    IsDefault != null &&
                    IsDefault.Equals(other.IsDefault)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();
                    if (Prompt != null)
                    hashCode = hashCode * 59 + Prompt.GetHashCode();
                    if (IsDefault != null)
                    hashCode = hashCode * 59 + IsDefault.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(DatacollectionProfileInstance left, DatacollectionProfileInstance right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(DatacollectionProfileInstance left, DatacollectionProfileInstance right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
