/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
    /// <summary>
    /// Parameters for the remote support contact modify operation. Was added in version 2.0.0.0.
    /// </summary>
    [DataContract]
    public partial class RemoteSupportContactModify : IEquatable<RemoteSupportContactModify>
    { 
        /// <summary>
        /// The last name of the support contact for this system. Was added in version 2.0.0.0.
        /// </summary>
        /// <value>The last name of the support contact for this system. Was added in version 2.0.0.0.</value>

        [MaxLength(128)]
        [DataMember(Name="last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// The first name of the support contact for this system. Was added in version 2.0.0.0.
        /// </summary>
        /// <value>The first name of the support contact for this system. Was added in version 2.0.0.0.</value>

        [MaxLength(128)]
        [DataMember(Name="first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// The email address of the support contact for this system. Was added in version 2.0.0.0.
        /// </summary>
        /// <value>The email address of the support contact for this system. Was added in version 2.0.0.0.</value>

        [MaxLength(256)]
        [DataMember(Name="email")]
        public string Email { get; set; }

        /// <summary>
        /// The phone number of this support contact for this system. Was added in version 2.0.0.0.
        /// </summary>
        /// <value>The phone number of this support contact for this system. Was added in version 2.0.0.0.</value>

        [MaxLength(64)]
        [DataMember(Name="phone")]
        public string Phone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RemoteSupportContactModify {\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((RemoteSupportContactModify)obj);
        }

        /// <summary>
        /// Returns true if RemoteSupportContactModify instances are equal
        /// </summary>
        /// <param name="other">Instance of RemoteSupportContactModify to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RemoteSupportContactModify other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    LastName == other.LastName ||
                    LastName != null &&
                    LastName.Equals(other.LastName)
                ) && 
                (
                    FirstName == other.FirstName ||
                    FirstName != null &&
                    FirstName.Equals(other.FirstName)
                ) && 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    Phone == other.Phone ||
                    Phone != null &&
                    Phone.Equals(other.Phone)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (LastName != null)
                    hashCode = hashCode * 59 + LastName.GetHashCode();
                    if (FirstName != null)
                    hashCode = hashCode * 59 + FirstName.GetHashCode();
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (Phone != null)
                    hashCode = hashCode * 59 + Phone.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(RemoteSupportContactModify left, RemoteSupportContactModify right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(RemoteSupportContactModify left, RemoteSupportContactModify right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
