/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Com.Dell.Emulator.Powerstore.Models
{ 
    /// <summary>
    /// Protection data associated with the VM snapshot.  Filtering on the fields of this embedded resource is not supported.
    /// </summary>
    [DataContract]
    public partial class VmProtectionDataInstance : IEquatable<VmProtectionDataInstance>
    { 
        /// <summary>
        /// Unique identifier of the protection rule that created the VM snapshot.
        /// </summary>
        /// <value>Unique identifier of the protection rule that created the VM snapshot.</value>

        [DataMember(Name="created_by_rule_id")]
        public string CreatedByRuleId { get; set; }

        /// <summary>
        /// Name of the rule that created the VM snapshot. This value is not updated if the name of the rule changes after snapshot creation. 
        /// </summary>
        /// <value>Name of the rule that created the VM snapshot. This value is not updated if the name of the rule changes after snapshot creation. </value>

        [DataMember(Name="created_by_rule_name")]
        public string CreatedByRuleName { get; set; }

        /// <summary>
        /// Gets or Sets CreatorType
        /// </summary>

        [DataMember(Name="creator_type")]
        public StorageCreatorTypeEnum? CreatorType { get; set; }

        /// <summary>
        /// Date when the VM snapshot can be automatically purged.
        /// </summary>
        /// <value>Date when the VM snapshot can be automatically purged.</value>

        [DataMember(Name="expiration_timestamp")]
        public DateTime? ExpirationTimestamp { get; set; }

        /// <summary>
        /// Time when the snapshot was created.
        /// </summary>
        /// <value>Time when the snapshot was created.</value>

        [DataMember(Name="source_timestamp")]
        public DateTime? SourceTimestamp { get; set; }

        /// <summary>
        /// For VM snapshots, this value is the same as parent_id.
        /// </summary>
        /// <value>For VM snapshots, this value is the same as parent_id.</value>

        [DataMember(Name="source_id")]
        public string SourceId { get; set; }

        /// <summary>
        /// VM from which the snapshot was created.
        /// </summary>
        /// <value>VM from which the snapshot was created.</value>

        [DataMember(Name="parent_id")]
        public string ParentId { get; set; }

        /// <summary>
        /// Localized message string corresponding to creator_type
        /// </summary>
        /// <value>Localized message string corresponding to creator_type</value>

        [DataMember(Name="creator_type_l10n")]
        public string CreatorTypeL10n { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VmProtectionDataInstance {\n");
            sb.Append("  CreatedByRuleId: ").Append(CreatedByRuleId).Append("\n");
            sb.Append("  CreatedByRuleName: ").Append(CreatedByRuleName).Append("\n");
            sb.Append("  CreatorType: ").Append(CreatorType).Append("\n");
            sb.Append("  ExpirationTimestamp: ").Append(ExpirationTimestamp).Append("\n");
            sb.Append("  SourceTimestamp: ").Append(SourceTimestamp).Append("\n");
            sb.Append("  SourceId: ").Append(SourceId).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  CreatorTypeL10n: ").Append(CreatorTypeL10n).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((VmProtectionDataInstance)obj);
        }

        /// <summary>
        /// Returns true if VmProtectionDataInstance instances are equal
        /// </summary>
        /// <param name="other">Instance of VmProtectionDataInstance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VmProtectionDataInstance other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CreatedByRuleId == other.CreatedByRuleId ||
                    CreatedByRuleId != null &&
                    CreatedByRuleId.Equals(other.CreatedByRuleId)
                ) && 
                (
                    CreatedByRuleName == other.CreatedByRuleName ||
                    CreatedByRuleName != null &&
                    CreatedByRuleName.Equals(other.CreatedByRuleName)
                ) && 
                (
                    CreatorType == other.CreatorType ||
                    CreatorType != null &&
                    CreatorType.Equals(other.CreatorType)
                ) && 
                (
                    ExpirationTimestamp == other.ExpirationTimestamp ||
                    ExpirationTimestamp != null &&
                    ExpirationTimestamp.Equals(other.ExpirationTimestamp)
                ) && 
                (
                    SourceTimestamp == other.SourceTimestamp ||
                    SourceTimestamp != null &&
                    SourceTimestamp.Equals(other.SourceTimestamp)
                ) && 
                (
                    SourceId == other.SourceId ||
                    SourceId != null &&
                    SourceId.Equals(other.SourceId)
                ) && 
                (
                    ParentId == other.ParentId ||
                    ParentId != null &&
                    ParentId.Equals(other.ParentId)
                ) && 
                (
                    CreatorTypeL10n == other.CreatorTypeL10n ||
                    CreatorTypeL10n != null &&
                    CreatorTypeL10n.Equals(other.CreatorTypeL10n)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CreatedByRuleId != null)
                    hashCode = hashCode * 59 + CreatedByRuleId.GetHashCode();
                    if (CreatedByRuleName != null)
                    hashCode = hashCode * 59 + CreatedByRuleName.GetHashCode();
                    if (CreatorType != null)
                    hashCode = hashCode * 59 + CreatorType.GetHashCode();
                    if (ExpirationTimestamp != null)
                    hashCode = hashCode * 59 + ExpirationTimestamp.GetHashCode();
                    if (SourceTimestamp != null)
                    hashCode = hashCode * 59 + SourceTimestamp.GetHashCode();
                    if (SourceId != null)
                    hashCode = hashCode * 59 + SourceId.GetHashCode();
                    if (ParentId != null)
                    hashCode = hashCode * 59 + ParentId.GetHashCode();
                    if (CreatorTypeL10n != null)
                    hashCode = hashCode * 59 + CreatorTypeL10n.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(VmProtectionDataInstance left, VmProtectionDataInstance right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(VmProtectionDataInstance left, VmProtectionDataInstance right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
