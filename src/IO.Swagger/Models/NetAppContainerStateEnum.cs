/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
        /// <summary>
        /// The state of the volume and aggregate that contain the LUN. LUNs are only available when their containers are available. * Online - This means container is available. * Aggregate_Offline - Container is not available as Aggregate is offline means LUNs are also not available. * Volume_Offline - Container is not available as Volume is offline means LUNs are also not available.  Was added in version 3.0.0.0.
        /// </summary>
        /// <value>The state of the volume and aggregate that contain the LUN. LUNs are only available when their containers are available. * Online - This means container is available. * Aggregate_Offline - Container is not available as Aggregate is offline means LUNs are also not available. * Volume_Offline - Container is not available as Volume is offline means LUNs are also not available.  Was added in version 3.0.0.0.</value>
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NetAppContainerStateEnum
        {
            
            /// <summary>
            /// Enum OnlineEnum for Online
            /// </summary>
            [EnumMember(Value = "Online")]
            OnlineEnum = 1,
            
            /// <summary>
            /// Enum AggregateOfflineEnum for Aggregate_Offline
            /// </summary>
            [EnumMember(Value = "Aggregate_Offline")]
            AggregateOfflineEnum = 2,
            
            /// <summary>
            /// Enum VolumeOfflineEnum for Volume_Offline
            /// </summary>
            [EnumMember(Value = "Volume_Offline")]
            VolumeOfflineEnum = 3
        }
}
