/*
 * PowerStore REST API
 *
 * Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )
 *
 * OpenAPI spec version: 4.0.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// The configuration settings of cluster during cluster creation.  Was added in version 2.0.0.0.
    /// </summary>
    [DataContract]
    public partial class ClusterCreateCluster : IEquatable<ClusterCreateCluster>
    { 
        /// <summary>
        /// The name of the cluster. The name can be up to 64 UTF-8 characters and cannot be an empty string. 
        /// </summary>
        /// <value>The name of the cluster. The name can be up to 64 UTF-8 characters and cannot be an empty string. </value>
        [Required]
        
        [StringLength(64, MinimumLength=1)]
        [DataMember(Name="name")]
        public string Name { get; set; }

        /// <summary>
        /// Set to true to ignore network warnings about unreachable external network services discovered while cluster creation. This can be useful for configuring a system before delivery into the intended deployment environment. The default is false, and these warnings will cause cluster creation to fail. 
        /// </summary>
        /// <value>Set to true to ignore network warnings about unreachable external network services discovered while cluster creation. This can be useful for configuring a system before delivery into the intended deployment environment. The default is false, and these warnings will cause cluster creation to fail. </value>

        [DataMember(Name="ignore_network_warnings")]
        public bool? IgnoreNetworkWarnings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClusterCreateCluster {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  IgnoreNetworkWarnings: ").Append(IgnoreNetworkWarnings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ClusterCreateCluster)obj);
        }

        /// <summary>
        /// Returns true if ClusterCreateCluster instances are equal
        /// </summary>
        /// <param name="other">Instance of ClusterCreateCluster to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClusterCreateCluster other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    IgnoreNetworkWarnings == other.IgnoreNetworkWarnings ||
                    IgnoreNetworkWarnings != null &&
                    IgnoreNetworkWarnings.Equals(other.IgnoreNetworkWarnings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (IgnoreNetworkWarnings != null)
                    hashCode = hashCode * 59 + IgnoreNetworkWarnings.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ClusterCreateCluster left, ClusterCreateCluster right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ClusterCreateCluster left, ClusterCreateCluster right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
